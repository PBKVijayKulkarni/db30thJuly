
public class Employee 
{
	     private  int id;
	     private String name;
	     private int age;
	     private int salary;
	     public Employee()
	       { }
		public int getId() {
			return id;
		}
		public void setId(int id) {
			this.id = id;
		}
		public String getName() {
			return name;
		}
		public void setName(String name) {
			this.name = name;
		}
		public int getAge() {
			return age;
		}
		public void setAge(int age) {
			this.age = age;
		}
		public int getSalary() {
			return salary;
		}
		public void setSalary(int salary) {
			this.salary = salary;
		}
		@Override
		public String toString() {
			return "Employee [id=" + id + ", name=" + name + ", age=" + age + ", salary=" + salary + "]";
		}
	     
}



import java.util.List;
import javax.sql.DataSource;
import org.springframework.jdbc.core.JdbcTemplate;
 
public class EmployeeJdbcTemplate 
{
    private JdbcTemplate jdbcTemplate;
    private DataSource dS;
 
    public void setDataSource(DataSource dataSource) {
         this.dS = dataSource;
         this.jdbcTemplate = new JdbcTemplate(dS);
    }
  
    public Employee getEmployeeById(int id){
         String sql = "select * from employee where id= ?";
         Employee employee = 
        		 jdbcTemplate.queryForObject(sql, new EmployeeRowMapper(), new Object[]{id} );
         //Employee employee = jdbcTemplate.queryForObject(sql, new Object[]{new Integer(id)} , new EmployeeRowMapper());
         return employee;
    }
 
    public List<Employee> getAllEmployees(){
         String sql = "select * from employee ";
         List<Employee> employee = jdbcTemplate.query(sql, 
        		                                                         new EmployeeRowMapper());
         return employee;
    }
 
    public Employee updateEmployee(String name, int id){
         String sql ="update employee set name = ? where id = ?";
         jdbcTemplate.update(sql, new Object[]{name,id}); 
         Employee emp = getEmployeeById(id);
         return emp;
     
    }
 
    public void insertEmployee(int id, String name , int age, int salary){
         String sql = "insert into Employee value (?,?,?,? )";
        jdbcTemplate.update(sql, new Object[]{id, name,age,salary }); 
    }
 
    public void deleteEmployee(int id){
         String sql ="delete from employee where id = ?";
        jdbcTemplate.update(sql, new Object[]{id}); 
    }
}



import java.sql.ResultSet;
import java.sql.SQLException;
import org.springframework.jdbc.core.RowMapper;


public class EmployeeRowMapper implements RowMapper<Employee> {
	 
	       public Employee mapRow(ResultSet rs, int rowNum)
	            throws SQLException {
	  
	             Employee emp = new Employee();
	             emp.setId(rs.getInt("id"));
	             emp.setName(rs.getString("name"));
	             emp.setAge(rs.getInt("age"));
	             emp.setSalary(rs.getInt("salary"));             
	             return emp;
	       }
	} 




import java.util.List;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import  com.p1.Employee;

public class App 
{
	public static void main(String args[])
	{
        ApplicationContext context = 
            new ClassPathXmlApplicationContext("Beans.xml");
            EmployeeJdbcTemplate employeeJdbcTemplate = 
               (EmployeeJdbcTemplate)context.getBean("employeeJdbcTemplate");

          // Display current state of Employee table 
          List<Employee> emp = employeeJdbcTemplate.getAllEmployees();
          System.out.println("Current State of employee table -");
          System.out.println(emp); 

          // insert new employee
          employeeJdbcTemplate.insertEmployee(5046, "Kapil", 60, 250000);

          // Display inserted employee  
          Employee insertedEmployee = employeeJdbcTemplate.getEmployeeById(5046);
          System.out.println("Inserted Employee Information from Employee Table - ");
          System.out.println(insertedEmployee);

          // update employee
          Employee updatedEmployee = employeeJdbcTemplate.updateEmployee("Prabhu", 1002);
          System.out.println("Updated Employee Information from Employee Table - ");
          System.out.println(updatedEmployee);
        
          //delete employee    
          employeeJdbcTemplate.deleteEmployee(202);

          // display total number of employees        
         // int count = employeeJdbcTemplate.getTotalNumberOfEmployees();        
          System.out.println("Total number of Employees in employee table ");
          //System.out.println(count);

          emp = employeeJdbcTemplate.getAllEmployees();
          System.out.println("Current State of employee table -");
          System.out.println(emp);
          ((AbstractApplicationContext) context).close();
   }
}


Beans1.xml
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
 
      <bean id="ds1"
         class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
            <property name="url" value="jdbc:mysql://localhost:3306/sakila"/>
            <property name="username" value="root"/>
            <property name="password" value="vijay@123"/>
      </bean>
 
      <bean id="employeeJdbcTemplate" 
         class="com.p1.EmployeeJdbcTemplate">
            <property name="dataSource"  ref="ds1" />    
      </bean>
     
</beans>
